home_status:
  sequence:
    - service: script.notify_echo
      data:
        message: >-
          {# a macro that removes all newline characters, empty spaces, and returns formatted text and replaces underscores with spaces  #}
          {%- macro cleanup(data) -%}
            {%- for item in data.split("\n")  if item | trim != "" -%}
            {{ item | trim | replace("_", " ") }} {% endfor -%}
          {%- endmacro -%}

          {# UK Holidays notifications #}  
          {%- macro UKHolidays() -%}
            {% set days2NextEvent = 0 %}
              {% if state_attr('calendar.holidays_in_the_united_kingdom', 'start_time') != None and state_attr('calendar.holidays_in_the_united_kingdom', 'message') != None %}
              {% if now().year == strptime(states.calendar.holidays_in_the_united_kingdom.attributes.start_time, '%Y-%m-%d %H:%M:%S').year %}
                {% set days2NextEvent = strptime(states.calendar.holidays_in_the_united_kingdom.attributes.start_time, '%Y-%m-%d %H:%M:%S').strftime('%j') | int - (now().strftime('%j') | int) %}
              {% else %}
                {% set days2NextEvent = strptime((now().year ~ "-12-31 12:02:05"), '%Y-%m-%d %H:%M:%S').strftime('%j') | int - (now().strftime('%j') | int) + (strptime(states.calendar.holidays_in_the_united_kingdom.attributes.start_time, '%Y-%m-%d %H:%M:%S').strftime('%j') | int) -%} 
              {% endif -%}  
              {% if days2NextEvent <= (states('input_number.calendar_remind_before_days') | int(7))  %}
                {% if days2NextEvent == 0 | int %}
                  Today is {{ states.calendar.holidays_in_the_united_kingdom.attributes.message | replace(".", "")}}.
                {%- elif days2NextEvent == 1 %}
                  Tomorrow is {{ states.calendar.holidays_in_the_united_kingdom.attributes.message | replace(".", "")}}.
                {%- elif days2NextEvent == 2 -%}
                  {{ states.calendar.holidays_in_the_united_kingdom.attributes.message | replace(".", "")}} is day after tomorrow.
                {%- else -%}
                  {{ states.calendar.holidays_in_the_united_kingdom.attributes.message | replace(".", "")}} is in {{ days2NextEvent }} days.
                {%- endif -%}
              {%- endif %}
              {%- endif %}
          {%- endmacro -%}

          {# weather summary #}
          {%- macro weather_update() -%}
            {%- if states('sensor.openweathermap_weather') |lower != "unknown" -%}
              {%- if '.' in states('sensor.openweathermap_weather') -%}
                "It is going to be {{ states('sensor.openweathermap_weather') |replace('min.', 'minutes') -}}. "
              {%- else -%}
                "It is going to be {{ states('sensor.openweathermap_weather') }}. "
              {%- endif -%}
            {%- endif -%}
            {%- if states('sensor.openweathermap_feels_like_temperature') | lower != "unknown" -%}
              "Outside temperature is {{ states('sensor.openweathermap_feels_like_temperature') | round(0) }} degrees."
            {%- endif -%}
            {%- if states('sensor.living_room_temperature') | lower != "unknown" -%}
              "Inside temperature is {{ states('sensor.living_room_temperature') | round(0) }} degrees."
            {%- endif -%}
            {%- if states('sensor.esphome_web_af4cb4_temperature') | lower != "unknown" -%}
              "Office temperature is {{ states('sensor.esphome_web_af4cb4_temperature') | round(0) }} degrees."
            {%- endif -%}
          {%- endmacro -%}
          {# Only notify pollen levels in spring #}
          {%- macro pollen_levels() -%}
            {% if (states('sensor.pollen_tree_index_day_1') | float > 0) and (states('sensor.season') | lower in ["spring", "summer"]) %}
              "Tree pollen is {{ states('sensor.pollen_tree_index_day_0') }} and grass pollen is {{ state_attr('sensor.pollen_tree_index_day_0', 'grassIndex') -}}. "
              {%- if (states('sensor.pollen_tree_index_day_1') | float > 7.0) -%}
                "Tomorrow's pollen levels are going to be Medium to High. "
              {%- endif -%}
            {% endif %}
          {%- endmacro -%}

          {# Only notify when high levels of UV #}
          {%- macro uv_levels() -%}
            {%- set uv = states('sensor.current_uv_index') | int(0) -%}
            {%- if  uv >= 6 and uv <= 7 -%}
              Current UV index is high. Please be careful outdoors.
            {%- elif  uv >= 8 and uv <= 10 -%}
              Current UV index is very high. It is not advised to go out.
            {%- elif  uv >= 11 -%}
              Current UV index is extremely high. It is highly advised to stay indoors.
            {%- endif -%}
          {%- endmacro -%}

          {# Calendar notifications #}
          {%- macro calendar_reminder() -%}
            {% set days2NextEvent = 0 %}
              {% if state_attr('calendar.simeon_pashley_org', 'start_time') != None and state_attr('calendar.simeon_pashley_org', 'message') != None %}
              {% if now().year == strptime(states.calendar.simeon_pashley_org.attributes.start_time, '%Y-%m-%d %H:%M:%S').year %}
                {% set days2NextEvent = strptime(states.calendar.simeon_pashley_org.attributes.start_time, '%Y-%m-%d %H:%M:%S').strftime('%j') | int - (now().strftime('%j') | int) %}
              {% else %}
                {% set days2NextEvent = strptime((now().year ~ "-12-31 12:02:05"), '%Y-%m-%d %H:%M:%S').strftime('%j') | int - (now().strftime('%j') | int) + (strptime(states.calendar.simeon_pashley_org.attributes.start_time, '%Y-%m-%d %H:%M:%S').strftime('%j') | int) -%} 
              {% endif -%}  
              {% if days2NextEvent <= states('input_number.calendar_remind_before_days') | int(7)  %}
                Your next event. {{ states.calendar.simeon_pashley_org.attributes.message }} . starts 
                {% if days2NextEvent == 0 | int %}
                  today at {{ strptime(states.calendar.simeon_pashley_org.attributes.start_time, '%Y-%m-%d %H:%M:%S').strftime('%I:%M %p') }}.
                {% elif days2NextEvent == 1 %}
                  tomorrow at {{ strptime(states.calendar.simeon_pashley_org.attributes.start_time, '%Y-%m-%d %H:%M:%S').strftime('%I:%M %p') }}.
                {% elif days2NextEvent == 2 %}
                  day after tomorrow {{ strptime(states.calendar.simeon_pashley_org.attributes.start_time, '%Y-%m-%d %H:%M:%S').strftime('%A') }} 
                  at {{ strptime(states.calendar.simeon_pashley_org.attributes.start_time, '%Y-%m-%d %H:%M:%S').strftime('%I:%M %p') }}.
                {% else %}
                  in {{ days2NextEvent }} days.
                {% endif %}
              {% endif %}
            {% endif %}
          {%- endmacro -%}

          {%- macro car_status() -%}
            {% if ((states("sensor.330e_xdrive_charging_level_hv") != "unknown") and (states("binary_sensor.330e_xdrive_connection_status") != "on") %}
            {%- if (states('sensor.330e_xdrive_charging_level_hv') | int) | round(0) < 85 and 
                  (states('sensor.330e_xdrive_charging_level_hv') | int) | round(0) > 0 -%}
              Attention!. Your car battery is at {{ states('sensor.330e_xdrive_charging_level_hv') }} percent, and you can only drive about {{ (states('sensor.330e_xdrive_remaining_range_electric_miles') | int) | round(0) }} miles. Please charge your car if you want to go anywhere.
            {%- endif -%}
            {% endif %}
          {%- endmacro -%}

          {# Drone Flying Weather #}
          {%- macro drone_weather() -%}
          {% if states('binary_sensor.good_weather_to_fly_drones')| lower == "on" and 
                states('device_tracker.simeon') == "home" and 
                states('sun.sun') == "above_horizon" %}
            It is now a great weather to fly drone outside.
          {% endif %}
          {%- endmacro -%}
          {# Birthday notifications #}
          {%- macro birthday_countdown(name, days2go) -%}
            {%if days2go != 'unknown' %}
              {%- if days2go |int == 0 -%}
                Today is {{name}}'s Birthday!. Happy Birthday to you, my dear {{name}}!!!.
              {%- elif days2go |int == 1 -%}
                Tomorrow is {{name}}'s Birthday! HURRAY!!!
              {%- elif days2go |int > 1 and days2go |int <= 10 -%}
                {{name}}'s Birthday is in {{days2go}} days! HURRAY!!!
              {%- endif -%}
            {%- endif -%}
          {%- endmacro -%}
          {# a macro to call all macros :)  #}
          {%- macro mother_of_all_macros() -%}
            It is {{ now().strftime("%I:%M %p") }}.
            {{ UKHolidays() }}
            {{ weather_update() }}
            {{ pollen_levels() }}
            {{ uv_levels() }}
            {{ calendar_reminder() }}
            {{ car_status() }}
            {{ drone_weather() }}
            {{ birthday_countdown("Claire", states('input_label.claire_birthday_days2go')) }}
            {{ birthday_countdown("Eleanor", states('input_label.eleanor_birthday_days2go')) }}
            {{ birthday_countdown("Isabelle", states('input_label.isabelle_birthday_days2go')) }}
          {%- endmacro -%}

          {# Call the macro  #}
          {{- cleanup(mother_of_all_macros()) -}}
