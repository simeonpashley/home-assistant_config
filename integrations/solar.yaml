automation:
  - alias: smappee_interval_1m
    id: 73de7a9b-8c86-435b-82fc-23f4199081df
    trigger:
      - platform: time_pattern
        minutes: "/1"
    action:
      - service: mqtt.publish
        data:
          topic: "sp/smappee/state"
          retain: true
          payload_template: >
            {
              "electric_load": {{ states("sensor.smappee_electric_load") | int(default=0) }},
              "solar_production": {{ states("sensor.smappee_solar_production") | int(default=0) }}
            }
  - alias: Push sensor config
    id: 1ff721f4-22ab-4bd2-b6a0-9be16dee99e5
    trigger:
      - event: start
        platform: homeassistant
    action:
      - service: mqtt.publish
        data:
          topic: "homeassistant/sensor/smappee_electric_load/config"
          retain: false
          payload_template: >
            {
              "unique_id": "smappee_electric_load",
              "name": "Smappee Electric Load",
              "state_topic": "servicelocation/5769521f-d672-11e7-ac58-022d286959f5/realtime",
              "state_class": "measurement",
              "icon": "mdi:power-plug",
              "unit_of_measurement": "W",
              {% raw %}
              "value_template": "{{ '{{value_json.channelPowers[1].power}}' }}"
              {% endraw %}
            }
      - service: mqtt.publish
        data:
          topic: "homeassistant/sensor/smappee_solar_production/config"
          retain: false
          payload_template: >
            {
              "unique_id": "smappee_solar_production",
              "name": "Smappee Solar Production",
              "state_topic": "servicelocation/5769521f-d672-11e7-ac58-022d286959f5/realtime",
              "state_class": "measurement",
              "icon": "mdi:power-plug",
              "unit_of_measurement": "W",
              {% raw %}
              "value_template": "{{ '{{max(0, value_json.channelPowers[0].power)}}' }}"
              {% endraw %}
            }
      - service: mqtt.publish
        data:
          topic: "homeassistant/sensor/electric_load/config"
          retain: false
          payload_template: >
            {
              "unique_id": "electric_load",
              "name": "Electric Load",
              "state_topic": "sp/smappee/state",
              "state_class": "measurement",
              "icon": "mdi:power-plug",
              "unit_of_measurement": "W",
              {% raw %}
              "value_template": "{{ '{{value_json.electric_load | int(default=0)}}' }}"
              {% endraw %}
            }
      - service: mqtt.publish
        data:
          topic: "homeassistant/sensor/solar_production/config"
          retain: false
          payload_template: >
            {
              "unique_id": "solar_production",
              "name": "Solar Production",
              "state_topic": "sp/smappee/state",
              "state_class": "measurement",
              "device_class": "power",
              "icon": "mdi:solar-power-variant-outline",
              "unit_of_measurement": "W",
              {% raw %}
              "value_template": "{{ '{{max(0, value_json.solar_production )}}' }}"
              {% endraw %}
            }

template:
  - sensor:
      - name: "Grid Power"
        unique_id: grid_power
        state_class: measurement
        device_class: power
        unit_of_measurement: "W"
        state: "{{ (states('sensor.electric_load') | float(0)) - (states('sensor.solar_production') | float(0)) }}"
      - name: "Solar Exported Power W"
        unique_id: solar_exported_power_w
        state_class: measurement
        device_class: power
        unit_of_measurement: "W"
        icon: mdi:flash-outline
        state: >
          {% if (states('sensor.grid_power') | int(0)) < 0 %}
            {{ -(states('sensor.grid_power') | int(0)) }}
          {% else %}
            0
          {% endif %}
      - name: Grid Import Power
        state_class: measurement
        icon: mdi:transmission-tower
        unit_of_measurement: W
        device_class: power
        state: >
          {{ [0, (states('sensor.electric_load') | float(0)) - (states('sensor.solar_production') | float(0)) ] | max }}
      - name: Grid Export Power
        state_class: measurement
        icon: mdi:transmission-tower
        unit_of_measurement: W
        device_class: power
        state: >
          {{ [0, (states('sensor.solar_production') | float(0)) - (states('sensor.electric_load') | float(0)) ] | max }}

sensor:
  - platform: template
    sensors:
      electricity_excess_solar: # Produce a sensor for "Excess Solar" being generated
        friendly_name: "Electricity Excess Solar Power"
        value_template: >
          {{ (states('sensor.solar_production') | float(default=0)) - (states('sensor.electric_load') | float(default=0)) }}
        unit_of_measurement: "W"
  - platform: statistics
    entity_id: sensor.solar_production
    name: cumulated production 5min
    state_characteristic: average_linear
    max_age:
      minutes: 5
    precision: 0
  - platform: statistics
    entity_id: sensor.electric_load
    name: total household consumption 5min
    state_characteristic: average_linear
    max_age:
      minutes: 5
    precision: 0
  - platform: integration
    source: sensor.solar_exported_power_w
    method: left
    unit_prefix: k
    name: solar_exported_power_kwh
  - platform: integration
    source: sensor.solar_production
    method: left
    unit_prefix: k
    name: solar_production_kwh
  - platform: filter
    name: LP20 Solar Production
    unique_id: lp20_solar_production
    entity_id: sensor.solar_production
    filters:
      - filter: lowpass
        time_constant: 20
        precision: 0
  - platform: filter
    name: LP20 Solar Exported Power
    entity_id: sensor.solar_exported_power_w
    filters:
      - filter: lowpass
        time_constant: 20
        precision: 0
