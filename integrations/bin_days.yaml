template:
  - trigger:
      - platform: time_pattern
        minutes: "/15"
    binary_sensor:
      - name: "Notify Bin Garden"
        icon: >
          {% if is_state('binary_sensor.bin_garden', 'on') %}
            mdi:delete-alert
          {% else %}
            mdi:delete-outline
          {% endif %}
        # ON 7 hours (25200s) before all_day event = 17:00 the day before, and OFF at 17:00 on the day,
        # or 1 hour (3600s) before normal event (Bin Garden)
        # CAREFUL: Binary sensors need true/false as input, NOT UI niceties like on/off or the like!
        state: >-
          {% set calendar = 'calendar.bin_garden' %}
          {# Adapt these for your needs #}
          {% set seconds_before_all_day = states('input_number.bin_seconds_before_all_day') | int(25200) %}
          {% set seconds_before_end_all_day = states('input_number.bin_seconds_before_end_all_day') | int(25200) %}
          {% set seconds_before_single = states('input_number.bin_seconds_before_single') | int(3600) %}
          {% set start = state_attr(calendar,'start_time') %}
          {# Prevent error when no calendar event (we won't have a start_time then) #}
          {% if start != None %}
            {% set _now = now().timestamp() %}
            {% set start = as_timestamp(start) %}
            {% set end = as_timestamp(state_attr(calendar,'end_time')) %}
            {% if _now < end %}
              {% if state_attr(calendar,'all_day') %}
                {{ _now < end - seconds_before_end_all_day and start - _now < seconds_before_all_day }}
              {% else %}
                {{ start - _now < seconds_before_single }}
              {% endif %}
            {% else %}
              false
            {% endif %}
          {% else %}
            false
          {% endif %}
  - trigger:
      - platform: time_pattern
        minutes: "/15"
    binary_sensor:
      - name: "Notify Bin Household"
        icon: >
          {% if is_state('binary_sensor.bin_household', 'on') %}
            mdi:delete-alert
          {% else %}
            mdi:delete-outline
          {% endif %}
        # ON 7 hours (25200s) before all_day event = 17:00 the day before, and OFF at 17:00 on the day,
        # or 1 hour (3600s) before normal event (Bin Garden)
        # CAREFUL: Binary sensors need true/false as input, NOT UI niceties like on/off or the like!
        state: >-
          {% set calendar = 'calendar.bin_household' %}
          {# Adapt these for your needs #}
          {% set seconds_before_all_day = states('input_number.bin_seconds_before_all_day') | int(25200) %}
          {% set seconds_before_end_all_day = states('input_number.bin_seconds_before_end_all_day') | int(25200) %}
          {% set seconds_before_single = states('input_number.bin_seconds_before_single') | int(3600) %}
          {% set start = state_attr(calendar,'start_time') %}
          {# Prevent error when no calendar event (we won't have a start_time then) #}
          {% if start != None %}
            {% set _now = now().timestamp() %}
            {% set start = as_timestamp(start) %}
            {% set end = as_timestamp(state_attr(calendar,'end_time')) %}
            {% if _now < end %}
              {% if state_attr(calendar,'all_day') %}
                {{ _now < end - seconds_before_end_all_day and start - _now < seconds_before_all_day }}
              {% else %}
                {{ start - _now < seconds_before_single }}
              {% endif %}
            {% else %}
              false
            {% endif %}
          {% else %}
            false
          {% endif %}
  - trigger:
      - platform: time_pattern
        minutes: "/15"
    binary_sensor:
      - name: "Notify Bin Paper"
        icon: >
          {% if is_state('binary_sensor.bin_paper', 'on') %}
            mdi:delete-alert
          {% else %}
            mdi:delete-outline
          {% endif %}
        # ON 7 hours (25200s) before all_day event = 17:00 the day before, and OFF at 17:00 on the day,
        # or 1 hour (3600s) before normal event (Bin Garden)
        # CAREFUL: Binary sensors need true/false as input, NOT UI niceties like on/off or the like!
        state: >-
          {% set calendar = 'calendar.bin_paper' %}
          {# Adapt these for your needs #}
          {% set seconds_before_all_day = states('input_number.bin_seconds_before_all_day') | int(25200) %}
          {% set seconds_before_end_all_day = states('input_number.bin_seconds_before_end_all_day') | int(25200) %}
          {% set seconds_before_single = states('input_number.bin_seconds_before_single') | int(3600) %}
          {% set start = state_attr(calendar,'start_time') %}
          {# Prevent error when no calendar event (we won't have a start_time then) #}
          {% if start != None %}
            {% set _now = now().timestamp() %}
            {% set start = as_timestamp(start) %}
            {% set end = as_timestamp(state_attr(calendar,'end_time')) %}
            {% if _now < end %}
              {% if state_attr(calendar,'all_day') %}
                {{ _now < end - seconds_before_end_all_day and start - _now < seconds_before_all_day }}
              {% else %}
                {{ start - _now < seconds_before_single }}
              {% endif %}
            {% else %}
              false
            {% endif %}
          {% else %}
            false
          {% endif %}
  - trigger:
      - platform: time_pattern
        minutes: "/15"
    binary_sensor:
      - name: "Notify Bin Mixed Recycle"
        icon: >
          {% if is_state('binary_sensor.bin_mixed_recycle', 'on') %}
            mdi:delete-alert
          {% else %}
            mdi:delete-outline
          {% endif %}
        # ON 7 hours (25200s) before all_day event = 17:00 the day before, and OFF at 17:00 on the day,
        # or 1 hour (3600s) before normal event (Bin Garden)
        # CAREFUL: Binary sensors need true/false as input, NOT UI niceties like on/off or the like!
        state: >-
          {% set calendar = 'calendar.bin_mixed_recycle' %}
          {# Adapt these for your needs #}
          {% set seconds_before_all_day = states('input_number.bin_seconds_before_all_day') | int(25200) %}
          {% set seconds_before_end_all_day = states('input_number.bin_seconds_before_end_all_day') | int(25200) %}
          {% set seconds_before_single = states('input_number.bin_seconds_before_single') | int(3600) %}
          {% set start = state_attr(calendar,'start_time') %}
          {# Prevent error when no calendar event (we won't have a start_time then) #}
          {% if start != None %}
            {% set _now = now().timestamp() %}
            {% set start = as_timestamp(start) %}
            {% set end = as_timestamp(state_attr(calendar,'end_time')) %}
            {% if _now < end %}
              {% if state_attr(calendar,'all_day') %}
                {{ _now < end - seconds_before_end_all_day and start - _now < seconds_before_all_day }}
              {% else %}
                {{ start - _now < seconds_before_single }}
              {% endif %}
            {% else %}
              false
            {% endif %}
          {% else %}
            false
          {% endif %}

automation:
  - alias: Bin day - Garden
    trigger:
      - platform: state
        entity_id: binary_sensor.notify_bin_garden
        to: "on"
      - platform: state
        entity_id: binary_sensor.notify_bin_garden
        to: "on"
        for: "02:00:00"
    action:
      - service: script.notify_me
        data:
          message: "♻ *Bin day* Take out BROWN bin (garden) out."
  - alias: Bin day - Household
    trigger:
      - platform: state
        entity_id: binary_sensor.notify_bin_household
        to: "on"
      - platform: state
        entity_id: binary_sensor.notify_bin_household
        to: "on"
        for: "02:00:00"
    action:
      - service: script.notify_me
        data:
          message: "♻ *Bin day* Take out Household bin (PINK) out"
  - alias: Bin day - Paper
    trigger:
      - platform: state
        entity_id: binary_sensor.notify_bin_paper
        to: "on"
      - platform: state
        entity_id: binary_sensor.notify_bin_paper
        to: "on"
        for: "02:00:00"
    action:
      - service: script.notify_me
        data:
          message: "♻ *Bin day* Take out Paper bin (garage) out."
  - alias: Bin day - Mixed Recycle
    trigger:
      - platform: state
        entity_id: binary_sensor.notify_bin_mixed_recycle
        to: "on"
      - platform: state
        entity_id: binary_sensor.notify_bin_mixed_recycle
        to: "on"
        for: "02:00:00"
    action:
      - service: script.notify_me
        data:
          message: "♻ *Bin day* Take out Mixed Recycle bin (garage) out."
