input_number:
  office_blind_solar_above:
    name: Office Blind Solar Above
    icon: mdi:weather-sunny
    min: 0
    max: 3000
    initial: 600

input_boolean:
  office_blind_automation:
    initial: true
  hot_day:
    initial: false

binary_sensor:
  - platform: template
    sensors:
      shield_back_from_solar:
        value_template: >
          {{ states('sensor.solar_azimuth')|int(0) < 170 
          and is_state('sun.sun', 'above_horizon')  
          and states('sensor.lp20_solar_production')|int(0) > 600
          and states('sensor.day_max_temp')|int(0) > 22
          and states('sensor.openweathermap_cloud_coverage')|int(0) < 50
          }}

sensor:
  # Day min and max temp
  - platform: template
    sensors:
      day_max_temp:
        friendly_name: "24h max temperature"
        unit_of_measurement: "Â°C"
        value_template: >
          {% set ns = namespace(max_temp=0) %}
          {% set start = (now().timestamp()) | int %}
          {% set end = start + 86400 %}
          {% for forecast in state_attr('weather.openweathermap', 'forecast') %}
          {% set dt = forecast.datetime | as_timestamp %}
          {% set temp = forecast.temperature | float(default=0) %}
          {% if (dt >= start and dt <= end) and temp > ns.max_temp %}
          {% set ns.max_temp = temp %}
          {% endif %}
          {% endfor %}
          {{ ns.max_temp }}

      day_min_temp:
        friendly_name: "24h min temperature"
        unit_of_measurement: "Â°C"
        value_template: >
          {% set ns = namespace(min_temp=999999) %}
          {% set start = (now().timestamp()) | int %}
          {% set end = start + 86400 %}
          {% for forecast in state_attr('weather.openweathermap', 'forecast') %}
          {% set dt = forecast.datetime | as_timestamp %}
          {% set temp = forecast.temperature | float(default=0) %}
          {% if (dt >= start and dt <= end) and temp < ns.min_temp %}
          {% set ns.min_temp = temp %}
          {% endif %}
          {% endfor %}
          {{ ns.min_temp }}

  - platform: template
    sensors:
      office_blind_position:
        friendly_name: "Office Blind Position"
        value_template: "{{ state_attr('cover.office_blind', 'current_position') | int(default=0)}}"
        unit_of_measurement: "%"
        icon_template: mdi:blinds
      # sunrise:
      #   value_template: "{{ ((as_timestamp(state_attr('sun.sun', 'next_rising'))) | timestamp_local) [11:16] }}"
      #   friendly_name: "sunrise"
      # sunset:
      #   value_template: "{{ ((as_timestamp(state_attr('sun.sun', 'next_setting'))) | timestamp_local) [11:16] }}"
      #   friendly_name: "sunset"
      solar_azimuth:
        friendly_name: "Sun azimuth"
        unit_of_measurement: "degrees"
        value_template: "{{ state_attr('sun.sun', 'azimuth') }}"

automation:
  - id: 94ac7281-77dc-497c-8f8f-8d9a2c64662a
    alias: turn off hot_day when sun goes downs
    mode: single
    trigger:
      - platform: state
        entity_id: sun.sun
        from: "above_horizon"
        to: "below_horizon"
    condition:
      - condition: state
        entity_id: input_boolean.hot_day
        state: "on"
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
    action:
      - service: input_boolean.turn_off
        entity_id:
          - input_boolean.hot_day
  - id: office_blind_manager
    alias: office blind manager
    trigger:
      - platform: state
        entity_id: sun.sun
      - platform: state
        entity_id: person.simeon
        to: "away"
        for:
          minutes: 10
    condition:
      - condition: state
        entity_id: input_boolean.office_blind_automation
        state: "on"
    action:
      - choose:
          # close - sun is below horizon AND blind is up
          - conditions:
              - condition: and
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.office_blind_position
                    above: 0
                  - condition: state
                    entity_id: sun.sun
                    state: "below_horizon"
            sequence:
              - service: script.close_office_blind
          # close - i am away AND blind is up
          - conditions:
              - condition: and
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.office_blind_position
                    above: 80
                  - condition: state
                    entity_id: person.simeon
                    state: "away"
            sequence:
              - service: script.close_office_blind_10
          # close - sun is strong and facing office window
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: input_boolean.hot_day
                    state: "off"
                  - condition: numeric_state
                    entity_id: sensor.office_blind_position
                    above: 10
                  - condition: state
                    entity_id: binary_sensor.shield_back_from_solar
                    state: "on"
            sequence:
              - data:
                  entity_id: input_boolean.hot_day
                service: input_boolean.turn_on
              - service: script.close_office_blind_10
          # open - after hot_day
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: input_boolean.hot_day
                    state: "on"
                  - condition: state
                    entity_id: binary_sensor.shield_back_from_solar
                    state: "off"
            sequence:
              - data:
                  entity_id: input_boolean.hot_day
                service: input_boolean.turn_off
              - service: script.open_office_blind_100
          # work day - open early
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: input_boolean.hot_day
                    state: "off"
                  - condition: state
                    entity_id: binary_sensor.shield_back_from_solar
                    state: "off"
                  - condition: numeric_state
                    entity_id: sensor.office_blind_position
                    below: 15
                  - condition: state
                    entity_id: sun.sun
                    state: "above_horizon"
                  - condition: time
                    after: "07:30"
                  - condition: time
                    weekday:
                      - mon
                      - tue
                      - wed
                      - thu
                      - fri
            sequence:
              - service: script.open_office_blind_100
          #  open
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: input_boolean.hot_day
                    state: "off"
                  - condition: state
                    entity_id: binary_sensor.shield_back_from_solar
                    state: "off"
                  - condition: numeric_state
                    entity_id: sensor.office_blind_position
                    below: 15
                  - condition: state
                    entity_id: sun.sun
                    state: "above_horizon"
                  - condition: time
                    after: "10:00"
            sequence:
              - service: script.open_office_blind_100
          - conditions:
              - condition: and
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.office_blind_position
                    above: 0
                  - condition: state
                    entity_id: sun.sun
                    state: "below_horizon"
            sequence:
              - service: script.open_office_blind
              - data:
                  entity_id: input_boolean.hot_day
                service: input_boolean.turn_off
  # - id: 8edbe5db-b2ab-4b7e-862a-eeae8a498a4e
  #   alias: "Office blinds close"
  #   trigger:
  #     - platform: state
  #       entity_id: person.simeon
  #       to: "away"
  #       for:
  #         seconds: 120
  #     - platform: state
  #       entity_id: input_select.home_mode
  #       to: "Away"
  #       for:
  #         seconds: 120
  #     - platform: state
  #       entity_id: input_select.home_mode
  #       to: "Vacation"
  #       for:
  #         seconds: 120
  #   action:
  #     - service: script.close_office_blind

script:
  set_office_blind:
    mode: queued
    sequence:
      - data:
          entity_id: cover.office_blind
          position: "{{ position }}"
        service: cover.set_cover_position
      - service: script.notify_me
        data:
          message: "Office blind set to {{ position }}"
  close_office_blind:
    alias: "lower office blind"
    sequence:
      - condition: numeric_state
        entity_id: sensor.office_blind_position
        above: 0
      - data:
          position: "0"
        service: script.set_office_blind
  close_office_blind_10:
    alias: "lower office blind to 10% to avoid sun"
    sequence:
      - condition: numeric_state
        entity_id: sensor.office_blind_position
        above: 10
      - data:
          position: "10"
        service: script.set_office_blind
  open_office_blind_100:
    alias: "open office blind to 100%"
    sequence:
      - condition: numeric_state
        entity_id: sensor.office_blind_position
        below: 100
      - data:
          position: "100"
        service: script.set_office_blind
      - data:
          entity_id: input_boolean.hot_day
        service: input_boolean.turn_off
